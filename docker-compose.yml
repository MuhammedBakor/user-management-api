services:
  db_service:
    container_name: postgres-container
    image: postgres
    environment:
      POSTGRES_USER: mohammad_bakur
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
      POSTGRES_DB: user_db
    volumes:
      - db_volume:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db_network
    restart: unless-stopped

  user-m-api-service:
    container_name: user-m-api-container
    image: muhammedbakur/user-management-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql:/db_service/:5432/user_db
    ports:
      - "8088:8080"
    networks:
      - db_network
    depends_on:
      - db_service
    restart: unless-stopped
    #command:
    #  - --spring.datasource.url=jdbc:postgresql:/db/:5432/user_db


networks:
  db_network:
    driver: bridge

volumes:
  db_volume:
  pgadmin:


  # pgadmin:
  # container_name: pgadmin
  # image: dpage/pgadmin4
  #environment:
  # PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #PGADMIN_CONFIG_SERVER_MODE: 'False'
  #volumes:
  # - pgadmin:/var/lib/pgadmin
  #ports:
  # - "5050:80"
  #networks:
  # - postgres
  #restart: unless-stopped
  #depends_on:
  # - db

  #docker run --name user-m-api-container --rm 8088:8080
  #--network user-management-api_db_service muhammedbakur/user-management-api:latest
  #--spring.datasource.url=jdbc:postgresql://db_service:5432/user_db